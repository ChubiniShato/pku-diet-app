name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: pku_test
          POSTGRES_USER: pku
          POSTGRES_PASSWORD: pku
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run unit tests
      run: ./mvnw test -q

    - name: Run integration tests
      run: ./mvnw verify -Pintegration -q
      env:
        DB_URL: jdbc:postgresql://localhost:5432/pku_test
        DB_USER: pku
        DB_PASSWORD: pku

    - name: Build application
      run: ./mvnw package -DskipTests -q

    - name: Generate OpenAPI spec
      run: ./mvnw springdoc-openapi:generate -q

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          services/api/target/surefire-reports/
          services/api/target/failsafe-reports/
        retention-days: 30

    - name: Upload OpenAPI spec
      uses: actions/upload-artifact@v4
      with:
        name: openapi-spec
        path: services/api/target/openapi.json
        retention-days: 30

    - name: Build Docker image
      run: |
        cd services/api
        docker build -t pku-api:${{ github.sha }} .

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Run OWASP Dependency Check
      run: ./mvnw org.owasp:dependency-check-maven:check -q
      continue-on-error: true

    - name: Upload OWASP report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: owasp-report
        path: services/api/target/dependency-check-report.html
        retention-days: 30

  pr-integration-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-it')
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Start test environment
      run: docker-compose -f test-compose.yml up -d

    - name: Wait for services
      run: |
        timeout 60 bash -c 'until docker-compose -f test-compose.yml ps | grep -q "healthy"; do sleep 2; done'

    - name: Run integration tests against real services
      run: |
        ./mvnw verify -Pintegration -q
        DB_URL=jdbc:postgresql://localhost:5433/pku_test

    - name: Cleanup
      if: always()
      run: docker-compose -f test-compose.yml down -v
