name: Docker Build & Push

on:
  push:
    branches: [ main, develop ]
    paths: [ 'services/api/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'services/api/**' ]

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/pku-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-,short=true
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: services/api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Get SHA tag from metadata
        id: sha-tag
        run: |
          # Extract the SHA tag from metadata output
          SHA_TAG=$(echo "${{ steps.meta.outputs.tags }}" | grep "sha-" | head -1)
          echo "sha-tag=$SHA_TAG" >> $GITHUB_OUTPUT
          echo "Using SHA tag: $SHA_TAG"

      - name: Trivy image scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ steps.sha-tag.outputs.sha-tag }}
          format: 'table'
          vuln-type: 'os,library'
          exit-code: '0'
