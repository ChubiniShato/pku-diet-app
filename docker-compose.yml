version: "3.8"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: pku
      POSTGRES_USER: pku
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pku}
    volumes: 
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pku} -d ${POSTGRES_DB:-pku}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    command: ["redis-server","--save","60","1","--loglevel","warning"]
    volumes: 
      - redisdata:/data
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: services/api
      dockerfile: Dockerfile
    depends_on:
      db: 
        condition: service_healthy
      redis: 
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod,docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pku
      SPRING_DATASOURCE_USERNAME: pku
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-pku}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      # JWT/Secrets პროდში მიეცემა secrets manager-იდან, აქ .env
      SECURITY_JWT_SECRET: ${SECURITY_JWT_SECRET:-change-me}
    ports: 
      - "8080:8080"
    restart: unless-stopped
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 12
      start_period: 20s

volumes:
  pgdata:
  redisdata: