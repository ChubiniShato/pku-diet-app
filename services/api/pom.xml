<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- ✅ ყოველთვის 4.0.0 -->
  <modelVersion>4.0.0</modelVersion>

  <!-- ✅ Spring Boot parent — განახლებული პაჩ ვერსია -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.7</version> <!-- latest 3.3.x patch; adjusts Spring/Tomcat CVEs -->
    <relativePath/>
  </parent>

  <groupId>com.chubini.pku</groupId>
  <artifactId>api</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>pku-api</name>
  <description>PKU diet planning API</description>

  <properties>
    <java.version>21</java.version>

    <!-- ვერსიების ცენტრალიზაცია -->
    <springdoc.version>2.6.0</springdoc.version>
    <swagger.ui.version>5.18.3</swagger.ui.version>
    <commons.lang3.version>3.15.0</commons.lang3.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <bucket4j.version>8.10.1</bucket4j.version>
    <commons.csv.version>1.10.0</commons.csv.version>
    <jjwt.version>0.12.6</jjwt.version>
    <spotless.version>2.43.0</spotless.version>
    <owasp.dc.version>12.1.0</owasp.dc.version>
    <flyway.version>10.10.0</flyway.version>
    <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
    <surefire.version>3.2.5</surefire.version>
    <failsafe.version>3.2.5</failsafe.version>
    <jacoco.version>0.8.12</jacoco.version>
    <logstash.encoder.version>7.4</logstash.encoder.version>
  </properties>

  <!-- Known CVEs fix: ახალი ვერსიების დაპინვა -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>
      <!-- swagger-ui override springdoc-სთვის (DOMPurify CVEs) -->
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>swagger-ui</artifactId>
        <version>${swagger.ui.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Web & Validation -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- Data JPA + PostgreSQL -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Flyway -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-postgresql</artifactId>
      <version>${flyway.version}</version>
    </dependency>

    <!-- OpenAPI / Swagger UI (update) -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>${springdoc.version}</version>
    </dependency>

    <!-- CSV Processing -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${commons.csv.version}</version>
    </dependency>

    <!-- Rate Limiting -->
    <dependency>
      <groupId>com.bucket4j</groupId>
      <artifactId>bucket4j-core</artifactId>
      <version>${bucket4j.version}</version>
    </dependency>

    <!-- Redis — ნაგულისხმევად ამოღებულია; პროფილში ჩაერთვება -->
    <!-- intentionally removed here; see profile 'redis' -->

    <!-- Metrics + Tracing -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash.encoder.version}</version>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- MapStruct -->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <!-- Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <!-- Mail -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

    <!-- JWT -->
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
      <version>${jjwt.version}</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <version>${jjwt.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <version>${jjwt.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Cache -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <!-- H2 (test/local) -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Tests -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>com.chubini.pku.PkuApiApplication</mainClass>
        </configuration>
      </plugin>

      <!-- Java 21 compiler + MapStruct -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>21</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>0.2.0</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- UNIT TESTS -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
          </includes>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
          <properties>
            <configurationParameters>junit.jupiter.exclude.tags=it</configurationParameters>
          </properties>
          <argLine>-Duser.timezone=UTC</argLine>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>

      <!-- INTEGRATION TESTS -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*IT.java</include>
                <include>**/*IntegrationTest.java</include>
              </includes>
              <properties>
                <configurationParameters>junit.jupiter.include.tags=it</configurationParameters>
              </properties>
              <argLine>-Duser.timezone=UTC</argLine>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- OWASP Dependency-Check — ნაგულისხმევად გამორთული; ჩართე -P security-scan -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${owasp.dc.version}</version>
        <configuration>
          <!-- ❗ძველი პარამეტრები ამოღებულია: აღარ ვ იყენებთ 'analyzers' და 'cveValidForHours' -->
          <skip>true</skip> <!-- default build-clean/verify-ზე არ იმუშავებს -->
          <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
          <!-- analyzer toggles (საერთო default) -->
          <ossIndexAnalyzerEnabled>false</ossIndexAnalyzerEnabled>
          <retireJsAnalyzerEnabled>true</retireJsAnalyzerEnabled>
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
          <swiftPackageManagerAnalyzerEnabled>false</swiftPackageManagerAnalyzerEnabled>
          <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
          <!-- რეპორტის კონფიგი -->
          <formats>
            <format>HTML</format>
            <format>JSON</format>
          </formats>
          <dataDirectory>${project.build.directory}/dependency-check</dataDirectory>
          <failOnError>false</failOnError> <!-- უცაბედი შეცდომა რომ არ დაგამხოს -->
          <failBuildOnCVSS>7.0</failBuildOnCVSS>
          <connectionTimeout>60000</connectionTimeout>
          <readTimeout>600000</readTimeout>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Flyway CLI (სურვილისამებრ) -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>${flyway.version}</version>
        <configuration>
          <url>${DB_URL:jdbc:postgresql://localhost:5432/pku}</url>
          <user>${DB_USER:pku}</user>
          <password>${DB_PASSWORD:pku}</password>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
          <baselineOnMigrate>true</baselineOnMigrate>
          <validateOnMigrate>true</validateOnMigrate>
        </configuration>
      </plugin>

      <!-- Maven Enforcer -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[21,)</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.9.0,)</version>
                </requireMavenVersion>
                <dependencyConvergence/>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Spotless -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>1.19.2</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <importOrder>
              <order>java,javax,com,org</order>
            </importOrder>
            <removeUnusedImports/>
          </java>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <!-- Phase 1 thresholds per Rev C -->
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.55</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.45</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Maven profiles -->
  <profiles>

    <!-- Integration-only run -->
    <profile>
      <id>integration</id>
      <properties>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.tests>false</skip.integration.tests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <skipTests>${skip.unit.tests}</skipTests>
              <excludes>
                <exclude>**/ScoringEngineTest.java</exclude>
                <exclude>**/VarietyEngineTest.java</exclude>
                <exclude>**/PantryAwareServiceTest.java</exclude>
                <exclude>**/NormsValidatorTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <skipITs>${skip.integration.tests}</skipITs>
              <includes>
                <include>**/*IT.java</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- OpenAPI JSON export -->
    <profile>
      <id>openapi-generate</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-maven-plugin</artifactId>
            <version>1.4</version>
            <configuration>
              <apiDocsUrl>${springdoc.apiDocsUrl}</apiDocsUrl>
              <outputFileName>openapi.json</outputFileName>
              <outputDir>${project.build.directory}</outputDir>
            </configuration>
            <executions>
              <execution>
                <id>generate-openapi</id>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- CI skip IT -->
    <profile>
      <id>ci-skip-it</id>
      <properties>
        <skipITs>true</skipITs>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe.version}</version>
            <configuration>
              <skipITs>${skipITs}</skipITs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Redis არჩევით -->
    <profile>
      <id>redis</id>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.4.0</version>
            <executions>
              <execution>
                <id>add-redis-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/main/java-redis</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Security scan profile: აქ რეალურად გაეშვება OWASP DC -->
    <profile>
      <id>security-scan</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${owasp.dc.version}</version>
            <configuration>
              <skip>false</skip>
              <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
              <!-- უარყოფითად იქცევა OSS Index (401/429) => ვთიშავთ -->
              <ossIndexAnalyzerEnabled>false</ossIndexAnalyzerEnabled>
              <retireJsAnalyzerEnabled>true</retireJsAnalyzerEnabled>
              <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
              <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
              <swiftPackageManagerAnalyzerEnabled>false</swiftPackageManagerAnalyzerEnabled>
              <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
              <formats>
                <format>HTML</format>
                <format>JSON</format>
              </formats>
              <dataDirectory>${project.build.directory}/dependency-check</dataDirectory>
              <failOnError>false</failOnError>
              <failBuildOnCVSS>7.0</failBuildOnCVSS>
              <connectionTimeout>60000</connectionTimeout>
              <readTimeout>600000</readTimeout>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
